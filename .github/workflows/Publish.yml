name: ðŸ¤– Publish Package

on:
  workflow_call:
    inputs:
      version:
        description: 'Set the version number of the published application.'
        default: '0.0.0'
        required: false
        type: string

jobs:
  docker:
    runs-on: ubuntu-latest
    name: Docker Image

    environment:
      name: ghcr
      url: https://github.com/Better-HPC/auto-rest/pkgs/container/auto-rest

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false

      - name: Set package version
        run: poetry version "${{ inputs.version }}"

      - name: Fetch image artifact
        uses: actions/download-artifact@v5
        with:
          name: auto-rest-docker
          path: /tmp

      - name: Load image
        run: docker load --input /tmp/auto-rest.tar

      - name: Define Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        env:
          # Enables label support for multi-arch images
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index
        with:
          images: ghcr.io/better-hpc/auto-rest
          tags: |
            type=semver,pattern={{version}}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title="Auto REST"
            org.opencontainers.image.description="Dynamically generates a REST API server for relational databases."
            org.opencontainers.image.url="https://github.com/better-hpc/auto-rest"
            org.opencontainers.image.source="https://github.com/better-hpc/auto-rest"
            org.opencontainers.image.version="${{ inputs.version }}"
            org.opencontainers.image.authors="Better HPC LLC"
            org.opencontainers.image.revision="${{ github.sha }}"
            org.opencontainers.image.vendor="Better HPC LLC"
            org.opencontainers.image.ref.name="ghcr.io/better-hpc/auto-rest:${{ inputs.version }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          platforms: linux/amd64,linux/arm64

  pypi:
    name: Python Distribution
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/project/auto-rest-api/

    steps:
      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.x'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: false

      - name: Fetch build artifact
        uses: actions/download-artifact@v5
        with:
          name: auto-rest-python
          path: dist

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
          attestations: false

  pages:
    name: Documentation
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v5

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: poetry install --with docs

      - name: Build HTML
        run: poetry run mkdocs build

      - name: Upload docs to artifact storage
        uses: actions/upload-pages-artifact@v4
        with:
          path: site

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
